<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NbDhE4aOy7SEkkkQn//Z
</value>
  </data>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>